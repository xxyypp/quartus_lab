// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 15.0.1 Build 150 06/03/2015 SJ Full Version"

// DATE "11/20/2015 17:39:22"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module fouropalu (
	C_OUT,
	I1,
	A,
	B,
	I0,
	S);
output 	C_OUT;
input 	I1;
input 	[3:0] A;
input 	B;
input 	I0;
output 	[3:0] S;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \C_OUT~output_o ;
wire \S[3]~output_o ;
wire \S[2]~output_o ;
wire \S[1]~output_o ;
wire \S[0]~output_o ;
wire \A[3]~input_o ;
wire \I1~input_o ;
wire \I0~input_o ;
wire \A[2]~input_o ;
wire \A[1]~input_o ;
wire \A[0]~input_o ;
wire \B~input_o ;
wire \inst|inst|inst3|inst~combout ;
wire \inst|inst|inst|inst~combout ;
wire \inst|inst|inst|inst12~0_combout ;
wire \inst|inst|inst2|inst12~0_combout ;
wire \inst|inst|inst3|inst12~0_combout ;
wire \inst|inst|inst4|HAs~0_combout ;


cyclonev_io_obuf \C_OUT~output (
	.i(\inst|inst|inst|inst~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\C_OUT~output_o ),
	.obar());
// synopsys translate_off
defparam \C_OUT~output .bus_hold = "false";
defparam \C_OUT~output .open_drain_output = "false";
defparam \C_OUT~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[3]~output (
	.i(\inst|inst|inst|inst12~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[3]~output .bus_hold = "false";
defparam \S[3]~output .open_drain_output = "false";
defparam \S[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[2]~output (
	.i(\inst|inst|inst2|inst12~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[2]~output .bus_hold = "false";
defparam \S[2]~output .open_drain_output = "false";
defparam \S[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[1]~output (
	.i(\inst|inst|inst3|inst12~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[1]~output .bus_hold = "false";
defparam \S[1]~output .open_drain_output = "false";
defparam \S[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[0]~output (
	.i(\inst|inst|inst4|HAs~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[0]~output .bus_hold = "false";
defparam \S[0]~output .open_drain_output = "false";
defparam \S[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \I1~input (
	.i(I1),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\I1~input_o ));
// synopsys translate_off
defparam \I1~input .bus_hold = "false";
defparam \I1~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \I0~input (
	.i(I0),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\I0~input_o ));
// synopsys translate_off
defparam \I0~input .bus_hold = "false";
defparam \I0~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst|inst3|inst (
// Equation(s):
// \inst|inst|inst3|inst~combout  = ( \B~input_o  & ( (!\I1~input_o  & ((!\A[1]~input_o ) # ((\I0~input_o  & !\A[0]~input_o )))) # (\I1~input_o  & (\I0~input_o  & (!\A[1]~input_o  & !\A[0]~input_o ))) ) ) # ( !\B~input_o  & ( (!\I1~input_o  & 
// ((!\A[1]~input_o ) # (\I0~input_o ))) ) )

	.dataa(!\I1~input_o ),
	.datab(!\I0~input_o ),
	.datac(!\A[1]~input_o ),
	.datad(!\A[0]~input_o ),
	.datae(!\B~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst|inst3|inst~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst|inst3|inst .extended_lut = "off";
defparam \inst|inst|inst3|inst .lut_mask = 64'hA2A2B2A0A2A2B2A0;
defparam \inst|inst|inst3|inst .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst|inst|inst (
// Equation(s):
// \inst|inst|inst|inst~combout  = ( \inst|inst|inst3|inst~combout  & ( (!\A[3]~input_o  & (\I1~input_o  & (\I0~input_o  & \A[2]~input_o ))) # (\A[3]~input_o  & (!\I1~input_o  $ ((\I0~input_o )))) ) ) # ( !\inst|inst|inst3|inst~combout  & ( ((\A[3]~input_o  
// & ((!\I0~input_o ) # (\A[2]~input_o )))) # (\I1~input_o ) ) )

	.dataa(!\A[3]~input_o ),
	.datab(!\I1~input_o ),
	.datac(!\I0~input_o ),
	.datad(!\A[2]~input_o ),
	.datae(!\inst|inst|inst3|inst~combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst|inst|inst~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst|inst|inst .extended_lut = "off";
defparam \inst|inst|inst|inst .lut_mask = 64'h7377414373774143;
defparam \inst|inst|inst|inst .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst|inst|inst12~0 (
// Equation(s):
// \inst|inst|inst|inst12~0_combout  = ( \inst|inst|inst3|inst~combout  & ( (!\I0~input_o  & (((\A[2]~input_o ) # (\I1~input_o )))) # (\I0~input_o  & (!\A[3]~input_o  $ (((!\I1~input_o ) # (\A[2]~input_o ))))) ) ) # ( !\inst|inst|inst3|inst~combout  & ( 
// (!\A[3]~input_o  & (!\I1~input_o  & ((\A[2]~input_o )))) # (\A[3]~input_o  & (!\I0~input_o  $ (((!\A[2]~input_o ) # (\I1~input_o ))))) ) )

	.dataa(!\A[3]~input_o ),
	.datab(!\I1~input_o ),
	.datac(!\I0~input_o ),
	.datad(!\A[2]~input_o ),
	.datae(!\inst|inst|inst3|inst~combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst|inst|inst12~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst|inst|inst12~0 .extended_lut = "off";
defparam \inst|inst|inst|inst12~0 .lut_mask = 64'h05C936F505C936F5;
defparam \inst|inst|inst|inst12~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst|inst2|inst12~0 (
// Equation(s):
// \inst|inst|inst2|inst12~0_combout  = ( \A[0]~input_o  & ( \B~input_o  & ( (!\I1~input_o  & (!\A[1]~input_o  $ (((!\I0~input_o ) # (!\A[2]~input_o ))))) # (\I1~input_o  & (\I0~input_o  & (\A[2]~input_o ))) ) ) ) # ( !\A[0]~input_o  & ( \B~input_o  & ( 
// (!\I0~input_o  & (!\I1~input_o  & ((\A[1]~input_o )))) # (\I0~input_o  & (!\A[2]~input_o  $ (((!\I1~input_o ) # (\A[1]~input_o ))))) ) ) ) # ( \A[0]~input_o  & ( !\B~input_o  & ( (!\I0~input_o  & (!\I1~input_o  & ((\A[1]~input_o )))) # (\I0~input_o  & 
// (((\A[2]~input_o )))) ) ) ) # ( !\A[0]~input_o  & ( !\B~input_o  & ( (!\I0~input_o  & (!\I1~input_o  & ((\A[1]~input_o )))) # (\I0~input_o  & (((\A[2]~input_o )))) ) ) )

	.dataa(!\I1~input_o ),
	.datab(!\I0~input_o ),
	.datac(!\A[2]~input_o ),
	.datad(!\A[1]~input_o ),
	.datae(!\A[0]~input_o ),
	.dataf(!\B~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst|inst2|inst12~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst|inst2|inst12~0 .extended_lut = "off";
defparam \inst|inst|inst2|inst12~0 .lut_mask = 64'h038B038B128B03A9;
defparam \inst|inst|inst2|inst12~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst|inst3|inst12~0 (
// Equation(s):
// \inst|inst|inst3|inst12~0_combout  = ( \B~input_o  & ( (!\I0~input_o  & (!\I1~input_o  & ((\A[0]~input_o )))) # (\I0~input_o  & (!\I1~input_o  $ (!\A[1]~input_o  $ (\A[0]~input_o )))) ) ) # ( !\B~input_o  & ( (!\I0~input_o  & (!\I1~input_o  & 
// ((\A[0]~input_o )))) # (\I0~input_o  & (((\A[1]~input_o )))) ) )

	.dataa(!\I1~input_o ),
	.datab(!\I0~input_o ),
	.datac(!\A[1]~input_o ),
	.datad(!\A[0]~input_o ),
	.datae(!\B~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst|inst3|inst12~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst|inst3|inst12~0 .extended_lut = "off";
defparam \inst|inst|inst3|inst12~0 .lut_mask = 64'h038B12A9038B12A9;
defparam \inst|inst|inst3|inst12~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst|inst4|HAs~0 (
// Equation(s):
// \inst|inst|inst4|HAs~0_combout  = (\I0~input_o  & (!\A[0]~input_o  $ (!\B~input_o )))

	.dataa(!\I0~input_o ),
	.datab(!\A[0]~input_o ),
	.datac(!\B~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst|inst4|HAs~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst|inst4|HAs~0 .extended_lut = "off";
defparam \inst|inst|inst4|HAs~0 .lut_mask = 64'h1414141414141414;
defparam \inst|inst|inst4|HAs~0 .shared_arith = "off";
// synopsys translate_on

assign C_OUT = \C_OUT~output_o ;

assign S[3] = \S[3]~output_o ;

assign S[2] = \S[2]~output_o ;

assign S[1] = \S[1]~output_o ;

assign S[0] = \S[0]~output_o ;

endmodule
