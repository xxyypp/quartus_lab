// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 15.0.1 Build 150 06/03/2015 SJ Full Version"

// DATE "11/20/2015 14:00:59"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module addsub (
	C_OUT,
	addsub,
	A,
	B,
	S);
output 	C_OUT;
input 	addsub;
input 	[3:0] A;
input 	[3:0] B;
output 	[3:0] S;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \C_OUT~output_o ;
wire \S[3]~output_o ;
wire \S[2]~output_o ;
wire \S[1]~output_o ;
wire \S[0]~output_o ;
wire \A[3]~input_o ;
wire \addsub~input_o ;
wire \B[3]~input_o ;
wire \A[2]~input_o ;
wire \B[2]~input_o ;
wire \A[1]~input_o ;
wire \B[1]~input_o ;
wire \A[0]~input_o ;
wire \B[0]~input_o ;
wire \inst|inst3|inst~combout ;
wire \inst|inst|inst~combout ;
wire \inst|inst|inst12~0_combout ;
wire \inst|inst2|inst12~0_combout ;
wire \inst|inst3|inst12~0_combout ;
wire \inst|inst4|inst12~0_combout ;


cyclonev_io_obuf \C_OUT~output (
	.i(\inst|inst|inst~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\C_OUT~output_o ),
	.obar());
// synopsys translate_off
defparam \C_OUT~output .bus_hold = "false";
defparam \C_OUT~output .open_drain_output = "false";
defparam \C_OUT~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[3]~output (
	.i(\inst|inst|inst12~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[3]~output .bus_hold = "false";
defparam \S[3]~output .open_drain_output = "false";
defparam \S[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[2]~output (
	.i(\inst|inst2|inst12~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[2]~output .bus_hold = "false";
defparam \S[2]~output .open_drain_output = "false";
defparam \S[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[1]~output (
	.i(\inst|inst3|inst12~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[1]~output .bus_hold = "false";
defparam \S[1]~output .open_drain_output = "false";
defparam \S[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[0]~output (
	.i(\inst|inst4|inst12~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[0]~output .bus_hold = "false";
defparam \S[0]~output .open_drain_output = "false";
defparam \S[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \addsub~input (
	.i(addsub),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\addsub~input_o ));
// synopsys translate_off
defparam \addsub~input .bus_hold = "false";
defparam \addsub~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B[3]~input (
	.i(B[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B[3]~input_o ));
// synopsys translate_off
defparam \B[3]~input .bus_hold = "false";
defparam \B[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B[2]~input (
	.i(B[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B[2]~input_o ));
// synopsys translate_off
defparam \B[2]~input .bus_hold = "false";
defparam \B[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B[1]~input (
	.i(B[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B[1]~input_o ));
// synopsys translate_off
defparam \B[1]~input .bus_hold = "false";
defparam \B[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B[0]~input (
	.i(B[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B[0]~input_o ));
// synopsys translate_off
defparam \B[0]~input .bus_hold = "false";
defparam \B[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst3|inst (
// Equation(s):
// \inst|inst3|inst~combout  = ( \B[0]~input_o  & ( (!\A[1]~input_o  & (\A[0]~input_o  & (!\addsub~input_o  $ (!\B[1]~input_o )))) # (\A[1]~input_o  & ((!\addsub~input_o  $ (!\B[1]~input_o )) # (\A[0]~input_o ))) ) ) # ( !\B[0]~input_o  & ( (!\B[1]~input_o  
// & (\addsub~input_o )) # (\B[1]~input_o  & ((\A[1]~input_o ))) ) )

	.dataa(!\addsub~input_o ),
	.datab(!\A[1]~input_o ),
	.datac(!\B[1]~input_o ),
	.datad(!\A[0]~input_o ),
	.datae(!\B[0]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst3|inst~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst3|inst .extended_lut = "off";
defparam \inst|inst3|inst .lut_mask = 64'h5353127B5353127B;
defparam \inst|inst3|inst .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst|inst (
// Equation(s):
// \inst|inst|inst~combout  = ( \B[2]~input_o  & ( \inst|inst3|inst~combout  & ( (!\B[3]~input_o  & (((\addsub~input_o  & \A[2]~input_o )) # (\A[3]~input_o ))) # (\B[3]~input_o  & ((!\addsub~input_o ) # ((\A[3]~input_o  & \A[2]~input_o )))) ) ) ) # ( 
// !\B[2]~input_o  & ( \inst|inst3|inst~combout  & ( (!\B[3]~input_o  & (((\A[3]~input_o  & \A[2]~input_o )) # (\addsub~input_o ))) # (\B[3]~input_o  & (((!\addsub~input_o  & \A[2]~input_o )) # (\A[3]~input_o ))) ) ) ) # ( \B[2]~input_o  & ( 
// !\inst|inst3|inst~combout  & ( (!\B[3]~input_o  & (\A[3]~input_o  & ((\A[2]~input_o ) # (\addsub~input_o )))) # (\B[3]~input_o  & (!\addsub~input_o  & ((\A[2]~input_o ) # (\A[3]~input_o )))) ) ) ) # ( !\B[2]~input_o  & ( !\inst|inst3|inst~combout  & ( 
// (!\B[3]~input_o  & (\addsub~input_o  & ((\A[2]~input_o ) # (\A[3]~input_o )))) # (\B[3]~input_o  & (\A[3]~input_o  & ((!\addsub~input_o ) # (\A[2]~input_o )))) ) ) )

	.dataa(!\A[3]~input_o ),
	.datab(!\addsub~input_o ),
	.datac(!\B[3]~input_o ),
	.datad(!\A[2]~input_o ),
	.datae(!\B[2]~input_o ),
	.dataf(!\inst|inst3|inst~combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst|inst~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst|inst .extended_lut = "off";
defparam \inst|inst|inst .lut_mask = 64'h1435145C357D5C7D;
defparam \inst|inst|inst .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst|inst12~0 (
// Equation(s):
// \inst|inst|inst12~0_combout  = ( \B[2]~input_o  & ( \inst|inst3|inst~combout  & ( !\A[3]~input_o  $ (!\B[3]~input_o  $ (((!\addsub~input_o ) # (!\A[2]~input_o )))) ) ) ) # ( !\B[2]~input_o  & ( \inst|inst3|inst~combout  & ( !\A[3]~input_o  $ 
// (!\B[3]~input_o  $ (((!\addsub~input_o  & \A[2]~input_o )))) ) ) ) # ( \B[2]~input_o  & ( !\inst|inst3|inst~combout  & ( !\A[3]~input_o  $ (!\B[3]~input_o  $ (((\A[2]~input_o ) # (\addsub~input_o )))) ) ) ) # ( !\B[2]~input_o  & ( 
// !\inst|inst3|inst~combout  & ( !\A[3]~input_o  $ (!\B[3]~input_o  $ (((\addsub~input_o  & !\A[2]~input_o )))) ) ) )

	.dataa(!\A[3]~input_o ),
	.datab(!\addsub~input_o ),
	.datac(!\B[3]~input_o ),
	.datad(!\A[2]~input_o ),
	.datae(!\B[2]~input_o ),
	.dataf(!\inst|inst3|inst~combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst|inst12~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst|inst12~0 .extended_lut = "off";
defparam \inst|inst|inst12~0 .lut_mask = 64'h695A69A55A96A596;
defparam \inst|inst|inst12~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst2|inst12~0 (
// Equation(s):
// \inst|inst2|inst12~0_combout  = !\addsub~input_o  $ (!\A[2]~input_o  $ (!\B[2]~input_o  $ (!\inst|inst3|inst~combout )))

	.dataa(!\addsub~input_o ),
	.datab(!\A[2]~input_o ),
	.datac(!\B[2]~input_o ),
	.datad(!\inst|inst3|inst~combout ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst2|inst12~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst2|inst12~0 .extended_lut = "off";
defparam \inst|inst2|inst12~0 .lut_mask = 64'h6996699669966996;
defparam \inst|inst2|inst12~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst3|inst12~0 (
// Equation(s):
// \inst|inst3|inst12~0_combout  = ( \B[0]~input_o  & ( !\addsub~input_o  $ (!\A[1]~input_o  $ (!\B[1]~input_o  $ (!\A[0]~input_o ))) ) ) # ( !\B[0]~input_o  & ( !\A[1]~input_o  $ (!\B[1]~input_o ) ) )

	.dataa(!\addsub~input_o ),
	.datab(!\A[1]~input_o ),
	.datac(!\B[1]~input_o ),
	.datad(!\A[0]~input_o ),
	.datae(!\B[0]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst3|inst12~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst3|inst12~0 .extended_lut = "off";
defparam \inst|inst3|inst12~0 .lut_mask = 64'h3C3C69963C3C6996;
defparam \inst|inst3|inst12~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst4|inst12~0 (
// Equation(s):
// \inst|inst4|inst12~0_combout  = !\A[0]~input_o  $ (!\B[0]~input_o )

	.dataa(gnd),
	.datab(!\A[0]~input_o ),
	.datac(!\B[0]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst4|inst12~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst4|inst12~0 .extended_lut = "off";
defparam \inst|inst4|inst12~0 .lut_mask = 64'h3C3C3C3C3C3C3C3C;
defparam \inst|inst4|inst12~0 .shared_arith = "off";
// synopsys translate_on

assign C_OUT = \C_OUT~output_o ;

assign S[3] = \S[3]~output_o ;

assign S[2] = \S[2]~output_o ;

assign S[1] = \S[1]~output_o ;

assign S[0] = \S[0]~output_o ;

endmodule
